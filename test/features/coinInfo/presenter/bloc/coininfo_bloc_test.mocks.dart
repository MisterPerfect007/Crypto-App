// Mocks generated by Mockito 5.2.0 from annotations
// in crypto_trends/test/features/coinInfo/presenter/bloc/coininfo_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:crypto_trends/core/network/network_info.dart' as _i8;
import 'package:crypto_trends/errors/failures.dart' as _i6;
import 'package:crypto_trends/features/coinInfo/domain/entities/coin_market_chart.dart'
    as _i7;
import 'package:crypto_trends/features/coinInfo/domain/repository/get_coin_market_chart_repository.dart'
    as _i2;
import 'package:crypto_trends/features/coinInfo/domain/usescases/get_coin_market_chart.dart'
    as _i4;
import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeGetCoinMarketChartRepository_0 extends _i1.Fake
    implements _i2.GetCoinMarketChartRepository {}

class _FakeEither_1<L, R> extends _i1.Fake implements _i3.Either<L, R> {}

/// A class which mocks [GetCoinMarketChart].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetCoinMarketChart extends _i1.Mock
    implements _i4.GetCoinMarketChart {
  MockGetCoinMarketChart() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetCoinMarketChartRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
              returnValue: _FakeGetCoinMarketChartRepository_0())
          as _i2.GetCoinMarketChartRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.CoinMarketChart>> call(
          {String? id, String? currency, String? days, bool? dailyInterval}) =>
      (super.noSuchMethod(
              Invocation.method(#call, [], {
                #id: id,
                #currency: currency,
                #days: days,
                #dailyInterval: dailyInterval
              }),
              returnValue:
                  Future<_i3.Either<_i6.Failure, _i7.CoinMarketChart>>.value(
                      _FakeEither_1<_i6.Failure, _i7.CoinMarketChart>()))
          as _i5.Future<_i3.Either<_i6.Failure, _i7.CoinMarketChart>>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i8.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<bool> get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected),
          returnValue: Future<bool>.value(false)) as _i5.Future<bool>);
}
