// Mocks generated by Mockito 5.2.0 from annotations
// in crypto_trends/test/features/coinList/data/repository/get_coin_list_repository_implementation_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:crypto_trends/features/coinList/data/datasources/coin_list_remote_data_source.dart'
    as _i3;
import 'package:crypto_trends/features/coinList/data/models/coin_model.dart'
    as _i5;
import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeClient_0 extends _i1.Fake implements _i2.Client {}

/// A class which mocks [CoinListRemoteDataSourceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockCoinListRemoteDataSourceImpl extends _i1.Mock
    implements _i3.CoinListRemoteDataSourceImpl {
  MockCoinListRemoteDataSourceImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Client get client => (super.noSuchMethod(Invocation.getter(#client),
      returnValue: _FakeClient_0()) as _i2.Client);
  @override
  _i4.Future<List<_i5.CoinModel>> getRemoteCoinList(
          {String? currency, int? page, List<String>? ids}) =>
      (super.noSuchMethod(
              Invocation.method(#getRemoteCoinList, [],
                  {#currency: currency, #page: page, #ids: ids}),
              returnValue: Future<List<_i5.CoinModel>>.value(<_i5.CoinModel>[]))
          as _i4.Future<List<_i5.CoinModel>>);
}
