// Mocks generated by Mockito 5.2.0 from annotations
// in crypto_trends/test/features/coinList/presenter/bloc/coin_list_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i6;

import 'package:crypto_trends/core/network/network_info.dart' as _i9;
import 'package:crypto_trends/errors/failures.dart' as _i7;
import 'package:crypto_trends/features/coinList/domain/entities/coin.dart'
    as _i8;
import 'package:crypto_trends/features/coinList/domain/repositories/get_coin_list_repository.dart'
    as _i2;
import 'package:crypto_trends/features/coinList/domain/usecases/get_coin_list.dart'
    as _i5;
import 'package:dartz/dartz.dart' as _i3;
import 'package:internet_connection_checker/internet_connection_checker.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeCoinListRepository_0 extends _i1.Fake
    implements _i2.CoinListRepository {}

class _FakeEither_1<L, R> extends _i1.Fake implements _i3.Either<L, R> {}

class _FakeInternetConnectionChecker_2 extends _i1.Fake
    implements _i4.InternetConnectionChecker {}

/// A class which mocks [GetRemoteCoinList].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetRemoteCoinList extends _i1.Mock implements _i5.GetRemoteCoinList {
  MockGetRemoteCoinList() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.CoinListRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeCoinListRepository_0()) as _i2.CoinListRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, List<_i8.Coin>>> call(
          String? currency, int? page) =>
      (super.noSuchMethod(Invocation.method(#call, [currency, page]),
          returnValue: Future<_i3.Either<_i7.Failure, List<_i8.Coin>>>.value(
              _FakeEither_1<_i7.Failure, List<_i8.Coin>>())) as _i6
          .Future<_i3.Either<_i7.Failure, List<_i8.Coin>>>);
}

/// A class which mocks [NetworkInfoImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfoImpl extends _i1.Mock implements _i9.NetworkInfoImpl {
  MockNetworkInfoImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.InternetConnectionChecker get internetConnectionChecker =>
      (super.noSuchMethod(Invocation.getter(#internetConnectionChecker),
              returnValue: _FakeInternetConnectionChecker_2())
          as _i4.InternetConnectionChecker);
  @override
  _i6.Future<bool> get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected),
          returnValue: Future<bool>.value(false)) as _i6.Future<bool>);
}
