// Mocks generated by Mockito 5.2.0 from annotations
// in crypto_trends/test/features/coinList/domain/usecases/get_coin_list_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:crypto_trends/errors/failures.dart' as _i5;
import 'package:crypto_trends/features/coinList/domain/entities/coin.dart'
    as _i6;
import 'package:crypto_trends/features/coinList/domain/repositories/get_coin_list_repository.dart'
    as _i3;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [CoinListRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCoinListRepository extends _i1.Mock
    implements _i3.CoinListRepository {
  MockCoinListRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.Coin>>> getRemoteCoinList(
          {String? currency, int? page}) =>
      (super.noSuchMethod(
          Invocation.method(
              #getRemoteCoinList, [], {#currency: currency, #page: page}),
          returnValue: Future<_i2.Either<_i5.Failure, List<_i6.Coin>>>.value(
              _FakeEither_0<_i5.Failure, List<_i6.Coin>>())) as _i4
          .Future<_i2.Either<_i5.Failure, List<_i6.Coin>>>);
}
